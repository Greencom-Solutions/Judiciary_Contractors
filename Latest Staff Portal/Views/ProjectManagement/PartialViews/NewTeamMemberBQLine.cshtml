@model Latest_Staff_Portal.ViewModel.TeamMembersBOQLines


<div class="row">

    @*        
        <div class="form-group">
            @Html.LabelFor(model => model.Design_Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Design_Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Design_Code, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="col-md-12">
        <div class="form-group">
            @Html.Label("Member", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(m => m.Member_No, Model.ListOfEmployees, "--Select Option--", new { @class = "form-control select2", @id = "Member_No" })
           @* @Html.EditorFor(model => model.Member_No, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Member_No, "", new { @class = "text-danger" })
        </div>
    </div>
    @*  <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Design_Stage, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Design_Stage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Design_Stage, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="col-md-12">
        <div class="form-group">
            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <textarea class="form-control" id="Description" rows="3"></textarea>
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            @Html.Label("Quantity", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "1", @id = "Quantity", @oninput = "calculateTotalCost()" } })
            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            @Html.Label("Unit Price", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Unit_Price, new { htmlAttributes = new { @class = "form-control", @id = "Unit_Cost", @oninput = "calculateTotalCost()" } })
            @Html.ValidationMessageFor(model => model.Unit_Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            @Html.Label("Total Amount", htmlAttributes: new { @class = "control-label col-md-2" })
            <input class="form-control" type="text" id="Total_Amount" placeholder="0" readonly style="background-color: #ccc" />
        </div>
    </div>

    <div style="text-align: center">
        <button type="button" class="btn btn-primary" style="background-color: #162f25; border: none" onclick="SubmitTeamMemberBOQLine();">Submit</button>
    </div>
</div>
<script>

    function calculateTotalCost() {
        const quantity = parseFloat(document.getElementById("Quantity").value) || 0;
        const unitCost = parseFloat(document.getElementById("Unit_Cost").value) || 0;
        const totalCost = quantity * unitCost;

        document.getElementById("Total_Amount").value = totalCost.toFixed(2); // Display with 2 decimal places
    }
</script>